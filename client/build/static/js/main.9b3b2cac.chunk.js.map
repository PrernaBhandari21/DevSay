{"version":3,"sources":["components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/layout/Alert.js","components/auth/Login.js","components/auth/Register.js","components/layout/Spinner.js","actions/profile.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/routing/PrivateRoute.js","components/profileForms/CreateProfile.js","components/profileForms/EditProfile.js","components/profileForms/AddExperience.js","components/profileForms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/layout/NotFound.js","components/TechBlogs.js","components/routing/Routes.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","Navbar","auth","isAuthenticated","loading","logout","authLinks","to","className","onClick","href","guestLinks","protoTypes","PropTypes","func","isRequired","object","connect","state","alerts","alert","length","map","key","login","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","minLength","register","password2","src","spinner","style","width","margin","display","alt","getCurrentProfile","statusText","status","createProfile","history","edit","push","DashboardActions","deleteExperience","delete","experience","experiences","_id","company","title","format","from","deleteEducation","education","educations","school","degree","fieldofstudy","profile","deleteAccount","window","confirm","user","useEffect","Spinner","Component","component","rest","render","props","withRouter","website","location","bio","githubusername","skills","youtube","facebook","twitter","instagram","linkedin","displaySocialMediaInputs","toggleSocialMediaInputs","join","social","addExperience","put","current","description","toDateDisabled","toggleDisabled","class","required","checked","disabled","cols","rows","addEducation","ProfileItem","avatar","slice","skill","index","getProfiles","console","log","profiles","p","ProfileTop","marginRight","aria-hidden","ProfileAbout","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","rel","stargazers_count","watchers_count","forks_count","created_at","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","fromat","defaultProps","postId","addPost","setText","getPosts","posts","addComment","deleteComment","commentId","comment","getPost","NotFound","TechBlogs","blogs","setBlogs","fetch","json","fetchBlogs","blog","url","open","Routes","exact","path","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Landing","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9b3b2cac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.a301654e.gif\";","import { v4 as uuidv4 } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 3000) => dispatch => {\r\n    const id = uuidv4(); // random long string\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg, alertType, id }\r\n    });\r\n\r\n    setTimeout(\r\n        () =>\r\n            dispatch({\r\n                type: REMOVE_ALERT,\r\n                payload: id\r\n            }),\r\n        timeout\r\n    );\r\n};\r\n","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const NO_REPOS = 'NO_REPOS';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_POST = 'GET_POST';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_PROFILE\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load user\r\nexport const loadUser = () => async dispatch => {\r\n    if (localStorage.token) {\r\n        setAuthToken(localStorage.token);\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get('/api/auth');\r\n\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        });\r\n    }\r\n};\r\n\r\n// Register a user\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n        const res = await axios.post('/api/users', body, config);\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data // the token we get back from successful registration\r\n        });\r\n\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n// Login a user\r\nexport const login = ({ email, password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post('/api/auth', body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n// Log out & clear profile\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    });\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\n\r\nexport const Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n    const authLinks = (\r\n        <ul>\r\n\r\n            <li>\r\n                <Link to='/profiles'>\r\n                    <i className='fas fa-code'></i> Developers\r\n                </Link>\r\n            </li>\r\n\r\n            <li>\r\n                <Link to='/tech-blogs'>\r\n                    <i className='fas fa-code'></i> Tech-Blogs\r\n                </Link>\r\n            </li>\r\n\r\n            <li>\r\n                <Link to='/posts'>\r\n                    <i className='fas fa-thumbtack'></i> Posts\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link to='/dashboard'>\r\n                    <i className='fas fa-id-card'></i>{' '}\r\n                    <span className='hide-sm'>Dashboard</span>\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <a onClick={logout} href='#!'>\r\n                    <i className='fas fa-sign-out-alt'></i>{' '}\r\n                    <span className='hide-sm'>Logout</span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    );\r\n    const guestLinks = (\r\n        <ul>\r\n            <li>\r\n                <Link to='/profiles'>\r\n                    <i className='fas fa-code'></i> Developers\r\n                </Link>\r\n            </li>\r\n\r\n            <li>\r\n                <Link to='/tech-blogs'>\r\n                    <i className='fas fa-code'></i> Tech-Blogs\r\n                </Link>\r\n            </li>\r\n\r\n            <li>\r\n                                <Link to='/register'>\r\n                    <i className='fas fa-user-plus'></i> Register\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link to='/login'>\r\n                    <i className='fas fa-sign-in-alt'></i> Login\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n\r\n    return (\r\n        <nav className='navbar bg-dark'>\r\n            <h1>\r\n                <Link to='/'>\r\n                    <i className='fab fa-dev'></i> DevSay\r\n                </Link>\r\n            </h1>\r\n            {!loading && (\r\n                <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n            )}\r\n        </nav>\r\n    );\r\n};\r\n\r\nNavbar.protoTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Landing.css\";\r\n\r\nexport const Landing = ({ isAuthenticated }) => {\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/dashboard' />;\r\n    }\r\n\r\n    return (\r\n        \r\n\r\n        <section className='landing'>\r\n            <div className='dark-overlay'>\r\n                <div className='landing-inner'>\r\n                    <h1 className='x-large'>DevSay</h1>\r\n                    <p className='lead'>\r\n                        Create a developer profile, share posts and connect with\r\n                        other developers.\r\n                    </p>\r\n                    <div className='buttons'>\r\n                        <Link to='/register' className='btn btn-primary'>\r\n                            Sign Up\r\n                        </Link>\r\n                        <Link to='/login' className='btn btn-primary'>\r\n                            Sign In\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nLanding.propTypes = {\r\n    isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({ alerts }) =>\r\n    alerts !== null &&\r\n    alerts.length > 0 &&\r\n    alerts.map(alert => (\r\n        <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n            {alert.msg}\r\n        </div>\r\n    ));\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\nimport \"./Login.css\";\r\n\r\nexport const Login = ({ login, isAuthenticated }) => {\r\n    // useState Hook\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    // Destructuring\r\n    const { email, password } = formData;\r\n\r\n    // onChange handler\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    // onSubmit handler\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        login({ email, password });\r\n    };\r\n\r\n    // Redirect if logged in\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/dashboard' />;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <section className='container'>\r\n                <h1 className='large text-primary'>Sign In</h1>\r\n                <p className='lead'>\r\n                    <i className='fas fa-user'></i> Sign Into Your Account\r\n                </p>\r\n                <form className='form' onSubmit={e => onSubmit(e)}>\r\n                    <div className='form-group'>\r\n                        <input\r\n                            type='email'\r\n                            placeholder='Email Address'\r\n                            name='email'\r\n                            value={email}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <input\r\n                            type='password'\r\n                            placeholder='Password'\r\n                            name='password'\r\n                            value={password}\r\n                            onChange={e => onChange(e)}\r\n                            minLength='6'\r\n                        />\r\n                    </div>\r\n                    <input\r\n                        type='submit'\r\n                        className='btn btn-primary'\r\n                        value='Login'\r\n                    />\r\n                </form>\r\n                <p className='my-1'>\r\n                    Don't have an account?\r\n                    <Link to='/register'> Sign Up</Link>\r\n                </p>\r\n            </section>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n    // useState Hook\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    // Destructuring\r\n    const { name, email, password, password2 } = formData;\r\n\r\n    // onChange handler\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    // onChange handler\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if (password !== password2) {\r\n            setAlert('Passwords do not match.', 'danger');\r\n        } else {\r\n            register({ name, email, password });\r\n        }\r\n    };\r\n\r\n    // Redirect if registered\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/dashboard' />;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <section className='container'>\r\n                <h1 className='large text-primary'>Sign Up</h1>\r\n                <p className='lead'>\r\n                    <i className='fas fa-user'></i> Create Your Account\r\n                </p>\r\n                <form className='form' onSubmit={e => onSubmit(e)}>\r\n                    <div className='form-group'>\r\n                        <input\r\n                            type='text'\r\n                            placeholder='Name'\r\n                            name='name'\r\n                            value={name}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <input\r\n                            type='email'\r\n                            placeholder='Email Address'\r\n                            name='email'\r\n                            value={email}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                        <small className='form-text'>\r\n                            This site uses Gravatar so if you want a profile\r\n                            image, use a Gravatar email\r\n                        </small>\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <input\r\n                            type='password'\r\n                            placeholder='Password'\r\n                            name='password'\r\n                            value={password}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <input\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            name='password2'\r\n                            value={password2}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <input\r\n                        type='submit'\r\n                        className='btn btn-primary'\r\n                        value='Register'\r\n                    />\r\n                </form>\r\n                <p className='my-1'>\r\n                    Already have an account? <Link to='/login'>Sign In</Link>\r\n                </p>\r\n            </section>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n            alt='Loading..'\r\n        />\r\n    </Fragment>\r\n);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_PROFILE,\r\n    GET_PROFILES,\r\n    GET_REPOS,\r\n    NO_REPOS,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    ACCOUNT_DELETED,\r\n    CLEAR_PROFILE\r\n} from './types';\r\n\r\n// Get current user profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    });\r\n\r\n    try {\r\n        const res = await axios.get('/api/profile/me');\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    });\r\n\r\n    try {\r\n        const res = await axios.get('/api/profile');\r\n\r\n        console.log(\"res\",res)\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Get user profile by id\r\nexport const getProfileById = userId => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Get Github repos\r\nexport const getGithubRepos = username => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: NO_REPOS\r\n        });\r\n    }\r\n};\r\n\r\n// Create or update profile\r\nexport const createProfile = (\r\n    formData,\r\n    history,\r\n    edit = false\r\n) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        };\r\n        const res = await axios.post('/api/profile', formData, config);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(\r\n            setAlert(edit ? 'Profile Updated.' : 'Profile Created.', 'success')\r\n        );\r\n\r\n        if (!edit) {\r\n            history.push('/dashboard'); // redirecting to dashboard\r\n        }\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Add experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        };\r\n        const res = await axios.put(\r\n            '/api/profile/experience',\r\n            formData,\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Experience added.', 'success'));\r\n\r\n        history.push('/dashboard'); // redirecting to dashboard\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Add education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        };\r\n        const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Education added.', 'success'));\r\n\r\n        history.push('/dashboard'); // redirecting to dashboard\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Experience deleted.', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Education deleted.', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Delete Account & Profile\r\nexport const deleteAccount = () => async dispatch => {\r\n    if (\r\n        window.confirm(\r\n            'Are you sure about deleting your account? This can NOT be UNDONE!'\r\n        )\r\n    ) {\r\n        try {\r\n            await axios.delete('/api/profile');\r\n\r\n            dispatch({\r\n                type: CLEAR_PROFILE\r\n            });\r\n            dispatch({\r\n                type: ACCOUNT_DELETED\r\n            });\r\n\r\n            dispatch(setAlert('Your account has been deleted.'));\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: {\r\n                    msg: err.response.statusText,\r\n                    status: err.response.status\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardActions = () => {\r\n    return (\r\n        <div className='dash-buttons'>\r\n            <Link to='/edit-profile' className='btn btn-light'>\r\n                <i className='fas fa-user-circle text-primary'></i> Edit Profile\r\n            </Link>\r\n            <Link to='/add-experience' className='btn btn-light'>\r\n                <i className='fab fa-black-tie text-primary'></i> Add Experience\r\n            </Link>\r\n            <Link to='/add-education' className='btn btn-light'>\r\n                <i className='fas fa-graduation-cap text-primary'></i> Add\r\n                Education\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardActions;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteExperience } from '../../actions/profile';\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n    const experiences = experience.map(e => (\r\n        <tr key={e._id}>\r\n            <td>{e.company}</td>\r\n            <td className='hise-sm'>{e.title}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>{e.from}</Moment> -{' '}\r\n                {e.to === null ? (\r\n                    ' Still working there!'\r\n                ) : (\r\n                    <Moment format='YYYY/MM/DD'>{e.to}</Moment>\r\n                )}\r\n            </td>\r\n            <td>\r\n                <button\r\n                    onClick={() => deleteExperience(e._id)}\r\n                    className='btn btn-danger'\r\n                >\r\n                    Delete\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    ));\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2 className='my-2'>Experience Credentials</h2>\r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Company</th>\r\n                        <th className='hide-sm'>Title</th>\r\n                        <th className='hide-sm'>Years</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{experiences}</tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nExperience.propTypes = {\r\n    experience: PropTypes.array.isRequired,\r\n    deleteExperience: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteEducation } from '../../actions/profile';\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n    const educations = education.map(e => (\r\n        <tr key={e._id}>\r\n            <td>{e.school}</td>\r\n            <td className='hise-sm'>{e.degree}</td>\r\n            <td className='hise-sm'>{e.fieldofstudy}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>{e.from}</Moment> -{' '}\r\n                {e.to === null ? (\r\n                    ' Still studying there!'\r\n                ) : (\r\n                    <Moment format='YYYY/MM/DD'>{e.to}</Moment>\r\n                )}\r\n            </td>\r\n            <td>\r\n                <button\r\n                    onClick={() => deleteEducation(e._id)}\r\n                    className='btn btn-danger'\r\n                >\r\n                    Delete\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    ));\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2 className='my-2'>Education Credentials</h2>\r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>School</th>\r\n                        <th className='hide-sm'>Degree</th>\r\n                        <th className='hide-sm'>Field of Study</th>\r\n                        <th className='hide-sm'>Years</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{educations}</tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nEducation.propTypes = {\r\n    education: PropTypes.array.isRequired,\r\n    deleteEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../layout/Spinner';\r\nimport { connect } from 'react-redux';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\n\r\nconst Dashboard = ({\r\n    getCurrentProfile,\r\n    deleteAccount,\r\n    auth: { user },\r\n    profile: { profile, loading }\r\n}) => {\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    }, [getCurrentProfile]);\r\n\r\n    return loading && profile === null ? (\r\n        <Spinner />\r\n    ) : (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Dashboard</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i> Welcome {user && user.name}\r\n            </p>\r\n            {profile !== null ? (\r\n                <Fragment>\r\n                    <DashboardActions />\r\n                    <Experience experience={profile.experience} />\r\n                    <Education education={profile.education} />\r\n                </Fragment>\r\n            ) : (\r\n                <Fragment>\r\n                    <p>\r\n                        Your profile hasn't been setup yet.. Create your profile\r\n                        now!\r\n                    </p>\r\n                    <Link to='/create-profile' className='btn btn-primary my-1'>\r\n                        Create Pofile !\r\n                    </Link>\r\n                </Fragment>\r\n            )}\r\n            <div className='my-2'>\r\n                <button\r\n                    onClick={() => deleteAccount()}\r\n                    className='btn btn-danger'\r\n                >\r\n                    <i className='fa fa-user-minus'></i> Delete Account\r\n                </button>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n    Dashboard\r\n);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n// Protecting the Dashboard component\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    auth: { isAuthenticated, loading },\r\n    ...rest\r\n}) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            !isAuthenticated && !loading ? (\r\n                <Redirect to='/login' />\r\n            ) : (\r\n                <Component {...props} />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        bio: '',\r\n        status: '',\r\n        githubusername: '',\r\n        skills: '',\r\n        youtube: '',\r\n        facebook: '',\r\n        twitter: '',\r\n        instagram: '',\r\n        linkedin: ''\r\n    });\r\n\r\n    const [displaySocialMediaInputs, toggleSocialMediaInputs] = useState(false);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        bio,\r\n        status,\r\n        githubusername,\r\n        skills,\r\n        youtube,\r\n        facebook,\r\n        twitter,\r\n        instagram,\r\n        linkedin\r\n    } = formData;\r\n\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Create Your Profile</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i> Fill out the information to\r\n                setup your Profile !\r\n            </p>\r\n            <p className='lead'>\r\n                <i className='fas fa-camera'></i> Create a Gravatar account with\r\n                the same email you used to login to update your avatar\r\n            </p>\r\n            <small>\r\n                <span className='star'>*</span> = required field\r\n            </small>\r\n            <form className='form' onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <select\r\n                        name='status'\r\n                        value={status}\r\n                        onChange={e => onChange(e)}\r\n                    >\r\n                        <option value='0'>* Select Professional Status</option>\r\n                        <option value='Developer'>Developer</option>\r\n                        <option value='Junior Developer'>\r\n                            Junior Developer\r\n                        </option>\r\n                        <option value='Senior Developer'>\r\n                            Senior Developer\r\n                        </option>\r\n                        <option value='Manager'>Manager</option>\r\n                        <option value='Student or Learning'>\r\n                            Student or Learning\r\n                        </option>\r\n                        <option value='Instructor'>\r\n                            Instructor or Teacher\r\n                        </option>\r\n                        <option value='Intern'>Intern</option>\r\n                        <option value='Other'>Other</option>\r\n                    </select>\r\n                    <small className='form-text'>\r\n                        Information related to your career\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Company'\r\n                        name='company'\r\n                        value={company}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        Your own company or one you work for\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Website'\r\n                        name='website'\r\n                        value={website}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        Your own or a company website\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Location'\r\n                        name='location'\r\n                        value={location}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        City &amp; Country (eg. Rabat, Morocco)\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* Skills'\r\n                        name='skills'\r\n                        value={skills}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        Please use comma separated values (eg. HTML,CSS,JS,PHP)\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Github Username'\r\n                        name='githubusername'\r\n                        value={githubusername}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        If you want your latest repos to be displayed, please\r\n                        include your username\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <textarea\r\n                        placeholder='A short bio of yourself'\r\n                        name='bio'\r\n                        value={bio}\r\n                        onChange={e => onChange(e)}\r\n                    ></textarea>\r\n                    <small className='form-text'>\r\n                        Tell us a little about who you are\r\n                    </small>\r\n                </div>\r\n\r\n                <div className='my-2'>\r\n                    <button\r\n                        onClick={() =>\r\n                            toggleSocialMediaInputs(!displaySocialMediaInputs)\r\n                        }\r\n                        type='button'\r\n                        className='btn btn-light'\r\n                    >\r\n                        Links to your Social Network Profiles\r\n                    </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialMediaInputs && (\r\n                    <Fragment>\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-youtube fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='YouTube URL'\r\n                                name='youtube'\r\n                                value={youtube}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-facebook fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Facebook URL'\r\n                                name='facebook'\r\n                                value={facebook}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-twitter fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Twitter URL'\r\n                                name='twitter'\r\n                                value={twitter}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-instagram fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Instagram URL'\r\n                                name='instagram'\r\n                                value={instagram}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-linkedin fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Linkedin URL'\r\n                                name='linkedin'\r\n                                value={linkedin}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n\r\n                <input type='submit' className='btn btn-primary my-1' />\r\n                <Link className='btn btn-light my-1' to='/dashboard'>\r\n                    Go Back\r\n                </Link>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n    profile: { profile, loading },\r\n    createProfile,\r\n    getCurrentProfile,\r\n    history\r\n}) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        bio: '',\r\n        status: '',\r\n        githubusername: '',\r\n        skills: '',\r\n        youtube: '',\r\n        facebook: '',\r\n        twitter: '',\r\n        instagram: '',\r\n        linkedin: ''\r\n    });\r\n\r\n    const [displaySocialMediaInputs, toggleSocialMediaInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n\r\n        // fill the form fields with the existing info\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            githubusername:\r\n                loading || !profile.githubusername\r\n                    ? ''\r\n                    : profile.githubusername,\r\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            instagram:\r\n                loading || !profile.social ? '' : profile.social.instagram,\r\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin\r\n        });\r\n    }, [loading, getCurrentProfile]);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        bio,\r\n        status,\r\n        githubusername,\r\n        skills,\r\n        youtube,\r\n        facebook,\r\n        twitter,\r\n        instagram,\r\n        linkedin\r\n    } = formData;\r\n\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Edit Your Profile</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i> Fill out the information to edit\r\n                your Profile !\r\n            </p>\r\n            <p className='lead'>\r\n                <i className='fas fa-camera'></i> Create a Gravatar account with\r\n                the same email you used to login to update your avatar\r\n            </p>\r\n            <small>\r\n                <span className='star'>*</span> = required field\r\n            </small>\r\n            <form className='form' onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <select\r\n                        name='status'\r\n                        value={status}\r\n                        onChange={e => onChange(e)}\r\n                    >\r\n                        <option value='0'>* Select Professional Status</option>\r\n                        <option value='Developer'>Developer</option>\r\n                        <option value='Junior Developer'>\r\n                            Junior Developer\r\n                        </option>\r\n                        <option value='Senior Developer'>\r\n                            Senior Developer\r\n                        </option>\r\n                        <option value='Manager'>Manager</option>\r\n                        <option value='Student or Learning'>\r\n                            Student or Learning\r\n                        </option>\r\n                        <option value='Instructor'>\r\n                            Instructor or Teacher\r\n                        </option>\r\n                        <option value='Intern'>Intern</option>\r\n                        <option value='Other'>Other</option>\r\n                    </select>\r\n                    <small className='form-text'>\r\n                        Information related to your career\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Company'\r\n                        name='company'\r\n                        value={company}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        Your own company or one you work for\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Website'\r\n                        name='website'\r\n                        value={website}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        Your own or a company website\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Location'\r\n                        name='location'\r\n                        value={location}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        City &amp; Country (eg. Rabat, Morocco)\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* Skills'\r\n                        name='skills'\r\n                        value={skills}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        Please use comma separated values (eg. HTML,CSS,JS,PHP)\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Github Username'\r\n                        name='githubusername'\r\n                        value={githubusername}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        If you want your latest repos to be displayed, please\r\n                        include your username\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <textarea\r\n                        placeholder='A short bio of yourself'\r\n                        name='bio'\r\n                        value={bio}\r\n                        onChange={e => onChange(e)}\r\n                    ></textarea>\r\n                    <small className='form-text'>\r\n                        Tell us a little about who you are\r\n                    </small>\r\n                </div>\r\n\r\n                <div className='my-2'>\r\n                    <button\r\n                        onClick={() =>\r\n                            toggleSocialMediaInputs(!displaySocialMediaInputs)\r\n                        }\r\n                        type='button'\r\n                        className='btn btn-light'\r\n                    >\r\n                        Links to your Social Network Profiles\r\n                    </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialMediaInputs && (\r\n                    <Fragment>\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-youtube fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='YouTube URL'\r\n                                name='youtube'\r\n                                value={youtube}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-facebook fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Facebook URL'\r\n                                name='facebook'\r\n                                value={facebook}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-twitter fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Twitter URL'\r\n                                name='twitter'\r\n                                value={twitter}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-instagram fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Instagram URL'\r\n                                name='instagram'\r\n                                value={instagram}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-linkedin fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Linkedin URL'\r\n                                name='linkedin'\r\n                                value={linkedin}\r\n                                onChange={e => onChange(e)}\r\n                            />\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n\r\n                <input type='submit' className='btn btn-primary my-1' />\r\n                <Link className='btn btn-light my-1' to='/dashboard'>\r\n                    Go Back\r\n                </Link>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n    withRouter(EditProfile)\r\n);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        title: '',\r\n        location: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const {\r\n        company,\r\n        title,\r\n        location,\r\n        from,\r\n        to,\r\n        current,\r\n        description\r\n    } = formData;\r\n\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        addExperience(formData, history);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 class='large text-primary'>Add Your Experience</h1>\r\n            <p class='lead'>\r\n                <i class='fas fa-code-branch'></i> Add any developer/programming\r\n                positions that you have had in the past\r\n            </p>\r\n            <small>\r\n                <span className='star'>*</span> = required field\r\n            </small>\r\n            <form class='form' onSubmit={e => onSubmit(e)}>\r\n                <div class='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* Job Title'\r\n                        name='title'\r\n                        value={title}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div class='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* Company'\r\n                        name='company'\r\n                        value={company}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div class='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Location'\r\n                        name='location'\r\n                        value={location}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div class='form-group'>\r\n                    <h4>From Date</h4>\r\n                    <input\r\n                        type='date'\r\n                        name='from'\r\n                        value={from}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div class='form-group'>\r\n                    <p>\r\n                        <input\r\n                            type='checkbox'\r\n                            name='current'\r\n                            checked={current}\r\n                            value={current}\r\n                            onChange={e => {\r\n                                setFormData({ ...formData, current: !current });\r\n                                toggleDisabled(!toDateDisabled);\r\n                            }}\r\n                        />{' '}\r\n                        Current Job\r\n                    </p>\r\n                </div>\r\n                <div class='form-group'>\r\n                    <h4>To Date</h4>\r\n                    <input\r\n                        type='date'\r\n                        name='to'\r\n                        value={to}\r\n                        onChange={e => onChange(e)}\r\n                        disabled={toDateDisabled ? 'disabled' : ''}\r\n                    />\r\n                </div>\r\n                <div class='form-group'>\r\n                    <textarea\r\n                        name='description'\r\n                        value={description}\r\n                        onChange={e => onChange(e)}\r\n                        cols='30'\r\n                        rows='5'\r\n                        placeholder='Job Description'\r\n                    ></textarea>\r\n                </div>\r\n                <input type='submit' class='btn btn-primary my-1' />\r\n                <Link class='btn btn-light my-1' to='/dashboard'>\r\n                    Go Back\r\n                </Link>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n    addExperience: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const {\r\n        school,\r\n        degree,\r\n        fieldofstudy,\r\n        from,\r\n        to,\r\n        current,\r\n        description\r\n    } = formData;\r\n\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        addEducation(formData, history);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 class='large text-primary'>Add Your Education</h1>\r\n            <p class='lead'>\r\n                <i class='fas fa-graduation-cap'></i> Add any school, bootcamp,\r\n                etc that you have attended\r\n            </p>\r\n            <small>\r\n                <span className='star'>*</span> = required field\r\n            </small>\r\n            <form class='form' onSubmit={e => onSubmit(e)}>\r\n                <div class='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* School or Bootcamp'\r\n                        name='school'\r\n                        value={school}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div class='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* Degree or Certificate'\r\n                        name='degree'\r\n                        value={degree}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div class='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Field Of Study'\r\n                        name='fieldofstudy'\r\n                        value={fieldofstudy}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div class='form-group'>\r\n                    <h4>From Date</h4>\r\n                    <input\r\n                        type='date'\r\n                        name='from'\r\n                        value={from}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div class='form-group'>\r\n                    <p>\r\n                        <input\r\n                            type='checkbox'\r\n                            name='current'\r\n                            checked={current}\r\n                            value={current}\r\n                            onChange={e => {\r\n                                setFormData({ ...formData, current: !current });\r\n                                toggleDisabled(!toDateDisabled);\r\n                            }}\r\n                        />{' '}\r\n                        Current School or Bootcamp\r\n                    </p>\r\n                </div>\r\n                <div class='form-group'>\r\n                    <h4>To Date</h4>\r\n                    <input\r\n                        type='date'\r\n                        name='to'\r\n                        value={to}\r\n                        onChange={e => onChange(e)}\r\n                        disabled={toDateDisabled ? 'disabled' : ''}\r\n                    />\r\n                </div>\r\n                <div class='form-group'>\r\n                    <textarea\r\n                        name='description'\r\n                        value={description}\r\n                        onChange={e => onChange(e)}\r\n                        cols='30'\r\n                        rows='5'\r\n                        placeholder='Program Description'\r\n                    ></textarea>\r\n                </div>\r\n                <input type='submit' class='btn btn-primary my-1' />\r\n                <Link class='btn btn-light my-1' to='/dashboard'>\r\n                    Go Back\r\n                </Link>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n    addEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({\r\n    profile: {\r\n        user: { _id, name, avatar },\r\n        status,\r\n        company,\r\n        location,\r\n        skills\r\n    }\r\n}) => {\r\n    return (\r\n        <div className='profile bg-light'>\r\n            <img src={avatar} alt='' className='round-img' />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>\r\n                    {status} {company && <span> at {company}</span>}\r\n                </p>\r\n                <p className='my-1'>{location && <span>{location}</span>}</p>\r\n                <Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n                    View Profile\r\n                </Link>\r\n            </div>\r\n            <ul>\r\n                {skills.slice(0, 4).map((skill, index) => (\r\n                    <li key={index} className='text-primary'>\r\n                        <i className='fas fa-check'></i> {skill}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfiles } from '../../actions/profile';\r\nimport ProfileItem from './ProfileItem';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n    useEffect(() => {\r\n        getProfiles();\r\n    }, [getProfiles]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? (\r\n                <Spinner />\r\n            ) : (\r\n                <Fragment>\r\n                    <h1 className='large text-primary'>Developers</h1>\r\n                    <p className='lead'>\r\n                        <i className='fab fa-connectdevelop'></i> Browse other developers & their skills\r\n                    </p>\r\n                    <div className='profiles'>\r\n                        {profiles.length > 0 ? (\r\n                            profiles.map(p => (\r\n                                <ProfileItem key={p._id} profile={p} />\r\n                            ))\r\n                        ) : (\r\n                            <Spinner />\r\n                        )}\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({\r\n    profile: {\r\n        status,\r\n        company,\r\n        location,\r\n        website,\r\n        social,\r\n        user: { name, avatar }\r\n    }\r\n}) => {\r\n    return (\r\n        <div className='profile-top bg-primary p-2'>\r\n            <img className='round-img my-1' src={avatar} alt='' />\r\n            <h1 className='large'>{name}</h1>\r\n            <p className='lead'>\r\n                {status} {company && <span> at {company}</span>}\r\n            </p>\r\n            <p><i class=\"fa fa-map-marker\" style={{marginRight:\"5px\"}} aria-hidden=\"true\"></i>\r\n{location && <span>{location}</span>}</p>\r\n            {/* <div className='icons my-1'>\r\n                {website && (\r\n                    <a href={website} target='_blank' rel='noopener noreferrer'>\r\n                        <i className='fas fa-globe fa-2x'></i>\r\n                    </a>\r\n                )}\r\n                {social && social.youtube && (\r\n                    <a\r\n                        href={social.youtube}\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'\r\n                    >\r\n                        <i className='fab fa-youtube fa-2x'></i>\r\n                    </a>\r\n                )}\r\n                {social && social.facebook && (\r\n                    <a\r\n                        href={social.facebook}\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'\r\n                    >\r\n                        <i className='fab fa-facebook fa-2x'></i>\r\n                    </a>\r\n                )}\r\n                {social && social.twitter && (\r\n                    <a\r\n                        href={social.twitter}\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'\r\n                    >\r\n                        <i className='fab fa-twitter fa-2x'></i>\r\n                    </a>\r\n                )}\r\n                {social && social.instagram && (\r\n                    <a\r\n                        href={social.instagram}\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'\r\n                    >\r\n                        <i className='fab fa-instagram fa-2x'></i>\r\n                    </a>\r\n                )}\r\n                {social && social.linkedin && (\r\n                    <a\r\n                        href={social.linkedin}\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'\r\n                    >\r\n                        <i className='fab fa-linkedin fa-2x'></i>\r\n                    </a>\r\n                )}\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({\r\n    profile: {\r\n        bio,\r\n        skills,\r\n        user: { name }\r\n    }\r\n}) => {\r\n    return (\r\n        <div className='profile-about bg-light p-2'>\r\n            {bio && (\r\n                <Fragment>\r\n                    <h2 className='text-primary'>{name}'s Bio</h2>\r\n                    <p>{bio}</p>\r\n                    <div className='line' />\r\n                </Fragment>\r\n            )}\r\n\r\n            <h2 className='text-primary'>Skill Set</h2>\r\n            <div className='skills'>\r\n                {skills.map((skill, index) => (\r\n                    <div key={index} className='p-1'>\r\n                        <i className='fa fa-check'></i> {skill}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileAbout.propTypes = {\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({\r\n    experience: { company, title, to, from, description }\r\n}) => {\r\n    return (\r\n        <div>\r\n            <h3 className='text-dark'>{company}</h3>\r\n            <p>\r\n                <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\r\n                {!to ? 'Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n            </p>\r\n            <p>\r\n                <strong>Position: </strong>\r\n                {title}\r\n            </p>\r\n            <p>\r\n                <strong>Description: </strong>\r\n                {description}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileExperience.propTypes = {\r\n    experience: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEducation = ({\r\n    education: { school, degree, fieldofstudy, to, from, description }\r\n}) => {\r\n    return (\r\n        <div>\r\n            <h3 className='text-dark'>{school}</h3>\r\n            <p>\r\n                <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\r\n                {!to ? 'Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n            </p>\r\n            <p>\r\n                <strong>Degree: </strong>\r\n                {degree}\r\n            </p>\r\n            <p>\r\n                <strong>Field of Study: </strong>\r\n                {fieldofstudy}\r\n            </p>\r\n            <p>\r\n                <strong>Description: </strong>\r\n                {description}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileEducation.propTypes = {\r\n    education: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport Moment from 'react-moment';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n    }, [getGithubRepos, username]);\r\n\r\n    return (\r\n        <div className='profile-github'>\r\n            <h2 className='text-primary my-1'>\r\n                <i className='fab fa-github'></i> Github Repos\r\n            </h2>\r\n            {repos === null ? (\r\n                <Spinner />\r\n            ) : (\r\n                repos.map(repo => (\r\n                    <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n                        <div>\r\n                            <h4>\r\n                                <a\r\n                                    href={repo.html_url}\r\n                                    target='_blank'\r\n                                    rel='noopener noreferrer'\r\n                                >\r\n                                    {repo.name}\r\n                                </a>\r\n                            </h4>\r\n                            <p>{repo.description}</p>\r\n                        </div>\r\n                        <div>\r\n                            <ul>\r\n                                <li class='badge badge-light'>\r\n                                    Stars: {repo.stargazers_count}\r\n                                </li>\r\n                                <li class='badge badge-dark'>\r\n                                    Watchers: {repo.watchers_count}\r\n                                </li>\r\n                                <li class='badge badge-primary'>\r\n                                    Forks: {repo.forks_count}\r\n                                </li>\r\n                                <li class='badge badge-dark'>\r\n                                    Created at:{' '}\r\n                                    <Moment format='YYYY/MM/DD'>\r\n                                        {repo.created_at}\r\n                                    </Moment>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    repos: state.profile.repos\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport { getProfileById } from '../../actions/profile';\r\n\r\nconst Profile = ({\r\n    getProfileById,\r\n    profile: { profile, loading },\r\n    auth,\r\n    match\r\n}) => {\r\n    useEffect(() => {\r\n        getProfileById(match.params.id);\r\n    }, [getProfileById, match.params.id]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {profile === null || loading ? (\r\n                <Spinner />\r\n            ) : (\r\n                <Fragment>\r\n                    <Link to='/profiles' className='btn btn-light'>\r\n                        Back to Profiles\r\n                    </Link>\r\n                    {auth.isAuthenticated &&\r\n                        auth.loading === false &&\r\n                        auth.user._id === profile.user._id && (\r\n                            <Link to='/edit-profile' className='btn btn-dark'>\r\n                                Edit profile\r\n                            </Link>\r\n                        )}\r\n                    <div className='profile-grid my-1'>\r\n                        <ProfileTop profile={profile} />\r\n                        <ProfileAbout profile={profile} />\r\n                        <div className='profile-exp bg-wite p-2'>\r\n                            <h2 className='text-primary'>Experiences</h2>\r\n                            {profile.experience.length > 0 ? (\r\n                                <Fragment>\r\n                                    {profile.experience.map(e => (\r\n                                        <ProfileExperience\r\n                                            key={e._id}\r\n                                            experience={e}\r\n                                        />\r\n                                    ))}\r\n                                </Fragment>\r\n                            ) : (\r\n                                <h4>No experience credentials to show.</h4>\r\n                            )}\r\n                        </div>\r\n                        <div className='profile-edu bg-wite p-2'>\r\n                            <h2 className='text-primary'>Education</h2>\r\n                            {profile.education.length > 0 ? (\r\n                                <Fragment>\r\n                                    {profile.education.map(e => (\r\n                                        <ProfileEducation\r\n                                            key={e._id}\r\n                                            education={e}\r\n                                        />\r\n                                    ))}\r\n                                </Fragment>\r\n                            ) : (\r\n                                <h4>No education credentials to show.</h4>\r\n                            )}\r\n                        </div>\r\n\r\n                        {profile.githubusername && (\r\n                            <ProfileGithub username={profile.githubusername} />\r\n                        )}\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\nconst PostItem = ({\r\n    addLike,\r\n    removeLike,\r\n    deletePost,\r\n    auth,\r\n    post: { _id, text, name, avatar, user, likes, comments, date },\r\n    showActions\r\n}) => {\r\n    return (\r\n        <div className='post bg-white p-1 my-1'>\r\n            <div>\r\n                <Link to={`/profile/${user}`}>\r\n                    <img className='round-img' src={avatar} alt='' />\r\n                    <h4>{name}</h4>\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <p className='my-1'>{text}</p>\r\n                <p className='post-date'>\r\n                    Posted on <Moment fromat='YYYY/MM/DD'>{date}</Moment>\r\n                </p>\r\n\r\n                {showActions && (\r\n                    <Fragment>\r\n                        <button\r\n                            onClick={e => addLike(_id)}\r\n                            type='button'\r\n                            className='btn btn-light'\r\n                        >\r\n                            <i className='fas fa-thumbs-up'></i>{' '}\r\n                            {likes.length > 0 && <span>{likes.length}</span>}\r\n                        </button>\r\n                        <button\r\n                            onClick={e => removeLike(_id)}\r\n                            type='button'\r\n                            className='btn btn-light'\r\n                        >\r\n                            <i className='fas fa-thumbs-down'></i>\r\n                        </button>\r\n                        <Link to={`/posts/${_id}`} className='btn btn-primary'>\r\n                            Discussion{' '}\r\n                            {comments.length > 0 && (\r\n                                <span className='comment-count'>\r\n                                    {comments.length}\r\n                                </span>\r\n                            )}\r\n                        </Link>\r\n                        {!auth.loading && user === auth.user._id && (\r\n                            <button\r\n                                onClick={e => deletePost(_id)}\r\n                                type='button'\r\n                                className='btn btn-danger'\r\n                            >\r\n                                <i className='fas fa-minus-circle'></i>\r\n                            </button>\r\n                        )}\r\n                    </Fragment>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nPostItem.defaultProps = {\r\n    showActions: true\r\n};\r\n\r\nPostItem.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    addLike: PropTypes.func.isRequired,\r\n    removeLike: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n    PostItem\r\n);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_POST,\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from './types';\r\n\r\n// Get Posts\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/posts');\r\n\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Add Like\r\nexport const addLike = postId => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/like/${postId}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { postId, likes: res.data }\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Remove Like\r\nexport const removeLike = postId => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlike/${postId}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { postId, likes: res.data }\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Remove Post\r\nexport const deletePost = postId => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/${postId}`);\r\n\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: postId\r\n        });\r\n\r\n        dispatch(setAlert('Post removed.', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Add Post\r\nexport const addPost = formData => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const res = await axios.post('/api/posts', formData, config);\r\n\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Post created.', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Get Post\r\nexport const getPost = postId => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/posts/${postId}`);\r\n\r\n        dispatch({\r\n            type: GET_POST,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Add Comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const res = await axios.post(\r\n            `/api/posts/comment/${postId}`,\r\n            formData,\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: ADD_COMMENT,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Comment added.', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n// Remove Comment\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n        dispatch({\r\n            type: REMOVE_COMMENT,\r\n            payload: commentId\r\n        });\r\n\r\n        dispatch(setAlert('Comment removed.', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {\r\n                msg: err.response.statusText,\r\n                status: err.response.status\r\n            }\r\n        });\r\n    }\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <div className='post-form'>\r\n            <div className='bg-primary p'>\r\n                <h3>\r\n                    Any questions you want to ask or information you want to\r\n                    share ?\r\n                </h3>\r\n            </div>\r\n            <form\r\n                onSubmit={e => {\r\n                    e.preventDefault();\r\n                    addPost({ text });\r\n                    setText('');\r\n                }}\r\n                className='form my-1'\r\n            >\r\n                <textarea\r\n                    name='text'\r\n                    value={text}\r\n                    onChange={e => setText(e.target.value)}\r\n                    cols='30'\r\n                    rows='5'\r\n                    placeholder='Your text goes here..'\r\n                    required\r\n                ></textarea>\r\n                <input\r\n                    type='submit'\r\n                    className='btn btn-dark my-1'\r\n                    value='Submit'\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nPostForm.propTypes = {\r\n    addPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from './PostItem';\r\nimport { getPosts } from '../../actions/post';\r\nimport PostForm from './PostForm';\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, [getPosts]);\r\n\r\n    return loading ? (\r\n        <Spinner />\r\n    ) : (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Posts</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-thumbtack'></i> Welcome to DevSay's Posts\r\n                section.\r\n            </p>\r\n            <p className='lead'>\r\n                Here you can share your thoughts and questions with other\r\n                Developers !\r\n            </p>\r\n            <PostForm />\r\n            <div className='posts'>\r\n                {posts.map(post => (\r\n                    <PostItem key={post._id} post={post} />\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nPosts.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <div className='post-form'>\r\n            <div className='bg-primary p'>\r\n                <h3>Leave your comment below !</h3>\r\n            </div>\r\n            <form\r\n                onSubmit={e => {\r\n                    e.preventDefault();\r\n                    addComment(postId, { text });\r\n                    setText('');\r\n                }}\r\n                className='form my-1'\r\n            >\r\n                <textarea\r\n                    name='text'\r\n                    value={text}\r\n                    onChange={e => setText(e.target.value)}\r\n                    cols='25'\r\n                    rows='4'\r\n                    placeholder='Your text goes here..'\r\n                    required\r\n                ></textarea>\r\n                <input\r\n                    type='submit'\r\n                    className='btn btn-dark my-1'\r\n                    value='Submit'\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    addComment: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\nconst CommentItem = ({\r\n    deleteComment,\r\n    postId,\r\n    comment: { _id, text, name, avatar, user, date },\r\n    auth\r\n}) => {\r\n    return (\r\n        <div className='post bg-white p-1 my-1'>\r\n            <div>\r\n                <Link to={`/profile/${user}`}>\r\n                    <img className='round-img' src={avatar} alt='' />\r\n                    <h4>{name}</h4>\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <p className='my-1'>{text}</p>\r\n                <p className='post-date'>\r\n                    <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n                </p>\r\n                {!auth.loading && user === auth.user._id && (\r\n                    <button\r\n                        onClick={e => deleteComment(postId, _id)}\r\n                        type='button'\r\n                        class='btn btn-danger'\r\n                    >\r\n                        <i class='fas fa-times'></i>\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCommentItem.propTypes = {\r\n    deleteComment: PropTypes.func.isRequired,\r\n    postId: PropTypes.number.isRequired,\r\n    comment: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport { getPost } from '../../actions/post';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n    useEffect(() => {\r\n        getPost(match.params.id);\r\n    }, [getPost, match.params.id]);\r\n\r\n    return loading || post === null ? (\r\n        <Spinner />\r\n    ) : (\r\n        <Fragment>\r\n            <Link to='/posts' className='btn'>\r\n                Back to Posts\r\n            </Link>\r\n            <PostItem post={post} showActions={false} />\r\n            <CommentForm postId={post._id} />\r\n            <div className='comments'>\r\n                {post.comments.map(comment => (\r\n                    <CommentItem\r\n                        key={comment._id}\r\n                        comment={comment}\r\n                        postId={post._id}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nPost.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import React, { Fragment } from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Fragment>\r\n            <h1 className='x-large text-primary'>\r\n                <i className='fas fa-exclamation-triangle'></i> Page Not Found !\r\n            </h1>\r\n            <p className='large'>\r\n                Sorry, the page you are trying to reach does not exist..\r\n            </p>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './TechBlogs.css';\r\n\r\nconst TechBlogs = () => {\r\n  const [blogs, setBlogs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchBlogs = async () => {\r\n      const response = await fetch('https://dev.to/api/articles?tag=javascript&per_page=15');\r\n      const data = await response.json();\r\n      setBlogs(data);\r\n    };\r\n\r\n    fetchBlogs();\r\n  }, []);\r\n\r\n  const handleReadMore = (url) => {\r\n    window.open(url, '_blank');\r\n  };\r\n\r\n  return (\r\n    <div className=\"blog-container\">\r\n      <h1 className=\"blog-heading\">Latest Tech Blogs !!</h1>\r\n      {blogs.map((blog) => (\r\n        <div className=\"blog-post\" key={blog.id}>\r\n          <h2 className=\"blog-title\">{blog.title}</h2>\r\n          <p className=\"blog-description\">{blog.description}</p>\r\n          <button className=\"read-more-btn\" onClick={() => handleReadMore(blog.url)}>Read More</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TechBlogs;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Alert from '../layout/Alert';\r\nimport Login from '../auth/Login';\r\nimport Register from '../auth/Register';\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport PrivateRoute from '../routing/PrivateRoute';\r\nimport CreateProfile from '../profileForms/CreateProfile';\r\nimport EditProfile from '../profileForms/EditProfile';\r\nimport AddExperience from '../profileForms/AddExperience';\r\nimport AddEducation from '../profileForms/AddEducation';\r\nimport Profiles from '../profiles/Profiles';\r\nimport Profile from '../profile/Profile';\r\nimport Posts from '../posts/Posts';\r\nimport Post from '../post/Post';\r\nimport NotFound from '../layout/NotFound';\r\nimport TechBlogs from '../TechBlogs';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <section className='container'>\r\n            <Alert />\r\n            <Switch>\r\n                <Route exact path='/register' component={Register} />\r\n                <Route exact path='/login' component={Login} />\r\n                <Route exact path='/profiles' component={Profiles} />\r\n                <Route exact path='/profile/:id' component={Profile} />\r\n                <Route exact path='/tech-blogs' component={TechBlogs} />\r\n                <PrivateRoute exact path='/dashboard' component={Dashboard} />\r\n                <PrivateRoute\r\n                    exact\r\n                    path='/create-profile'\r\n                    component={CreateProfile}\r\n                />\r\n                <PrivateRoute\r\n                    exact\r\n                    path='/edit-profile'\r\n                    component={EditProfile}\r\n                />\r\n                <PrivateRoute\r\n                    exact\r\n                    path='/add-experience'\r\n                    component={AddExperience}\r\n                />\r\n                <PrivateRoute\r\n                    exact\r\n                    path='/add-education'\r\n                    component={AddEducation}\r\n                />\r\n                <PrivateRoute exact path='/posts' component={Posts} />\r\n                <PrivateRoute exact path='/posts/:id' component={Post} />\r\n                <Route component={NotFound} />\r\n            </Switch>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true, // switch to false when data loaded\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            };\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            };\r\n        case ACCOUNT_DELETED:\r\n        case LOGOUT:\r\n        case LOGIN_FAIL:\r\n        case AUTH_ERROR: // does the same thing as REGISTER_FAIL\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false // done loading even though it failed\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_PROFILE,\r\n    GET_PROFILES,\r\n    GET_REPOS,\r\n    PROFILE_ERROR,\r\n    CLEAR_PROFILE,\r\n    UPDATE_PROFILE\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case UPDATE_PROFILE:\r\n        case GET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            };\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            };\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false\r\n            };\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    post: null,\r\n    posts: [],\r\n    loading: true,\r\n    error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                post: payload,\r\n                loading: false\r\n            };\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            };\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [payload, ...state.posts], // payload goes first if you want the added post to go on top of the page without having to refresh it\r\n                loading: false\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload),\r\n                loading: false\r\n            };\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post =>\r\n                    post._id === payload.postId\r\n                        ? { ...post, likes: payload.likes }\r\n                        : post\r\n                ),\r\n                loading: false\r\n            };\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: { ...state.post, comments: payload },\r\n                loading: false\r\n            };\r\n        case REMOVE_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: state.post.comments.filter(\r\n                    comment => comment._id !== payload\r\n                ),\r\n                loading: false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n    profile,\r\n    post\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Landing from './components/layout/Landing';\r\nimport Routes from './components/routing/Routes';\r\n\r\n// Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport { loadUser } from './actions/auth';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\nimport './App.css';\r\n\r\n// we put this here too, because this will only check the first time that a user loads\r\nif (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        store.dispatch(loadUser());\r\n    }, []); // empty brackets, so it becomes a componentDidMount and runs only one time\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <Router>\r\n                <Fragment>\r\n                    <Navbar />\r\n                    <Switch>\r\n                        <Route exact path='/' component={Landing} />\r\n                        <Route component={Routes} />\r\n                    </Switch>\r\n                </Fragment>\r\n            </Router>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}